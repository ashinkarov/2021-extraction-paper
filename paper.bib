@inproceedings{numba,
author = {Lam, Siu Kwan and Pitrou, Antoine and Seibert, Stanley},
title = {Numba: A LLVM-Based Python JIT Compiler},
year = {2015},
isbn = {9781450340052},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2833157.2833162},
doi = {10.1145/2833157.2833162},
abstract = {Dynamic, interpreted languages, like Python, are attractive for domain-experts and scientists experimenting with new ideas. However, the performance of the interpreter is often a barrier when scaling to larger data sets. This paper presents a just-in-time compiler for Python that focuses in scientific and array-oriented computing. Starting with the simple syntax of Python, Numba compiles a subset of the language into efficient machine code that is comparable in performance to a traditional compiled language. In addition, we share our experience in building a JIT compiler using LLVM[1].},
booktitle = {Proceedings of the Second Workshop on the LLVM Compiler Infrastructure in HPC},
articleno = {7},
numpages = {6},
keywords = {Python, compiler, LLVM},
location = {Austin, Texas},
series = {LLVM '15}
}

@InProceedings{deepshallow,
author="Svenningsson, Josef
and Axelsson, Emil",
editor="Loidl, Hans-Wolfgang
and Pe{\~{n}}a, Ricardo",
title="Combining Deep and Shallow Embedding for EDSL",
booktitle="Trends in Functional Programming",
year="2013",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="21--36",
abstract="When compiling embedded languages it is natural to use an abstract syntax tree to represent programs. This is known as a deep embedding and it is a rather cumbersome technique compared to other forms of embedding, typically leading to more code and being harder to extend. In shallow embeddings, language constructs are mapped directly to their semantics which yields more flexible and succinct implementations. But shallow embeddings are not well-suited for compiling embedded languages. We present a technique to combine deep and shallow embedding in the context of compiling embedded languages in order to provide the benefits of both techniques. In particular it helps keeping the deep embedding small and it makes extending the embedded language much easier. Our technique also has some unexpected but welcome knock-on effects. It provides fusion of functions to remove intermediate results for free without any additional effort. It also helps to give the embedded language a more natural programming interface.",
isbn="978-3-642-40447-4"
}

@inproceedings{llvm,
author = {Lattner, Chris and Adve, Vikram},
title = {LLVM: A Compilation Framework for Lifelong Program Analysis \& Transformation},
year = {2004},
isbn = {0769521029},
publisher = {IEEE Computer Society},
address = {USA},
booktitle = {Proceedings of the International Symposium on Code Generation and Optimization: Feedback-Directed and Runtime Optimization},
pages = {75},
location = {Palo Alto, California},
series = {CGO '04}
}

@misc{kaleidoscope,
        author = {{{LLVM} development team}},
        howpublished = {\url{https://llvm.org/docs/tutorial/MyFirstLanguageFrontend/index.html}},
        title = {My First Language Frontend with LLVM Tutorial},
        year = 2021,
        note = {Accessed [2021/02/20]}
}

@misc{agda,
        author = {{{Agda} development team}},
        howpublished = {\url{https://agda.readthedocs.io}},
        title = {Agda v2.6.1.3 Documentation},
        year = 2021,
        note = {Accessed [2021/02/20]}
}



@inproceedings{idris-refl,
author = {Christiansen, David and Brady, Edwin},
title = {Elaborator Reflection: Extending Idris in Idris},
year = {2016},
isbn = {9781450342193},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2951913.2951932},
doi = {10.1145/2951913.2951932},
booktitle = {Proceedings of the 21st ACM SIGPLAN International Conference on Functional Programming},
pages = {284–297},
numpages = {14},
keywords = {elaboration, dependent types, Metaprogramming},
location = {Nara, Japan},
series = {ICFP 2016}
}

@InProceedings{metacoq,
author="Anand, Abhishek
and Boulier, Simon
and Cohen, Cyril
and Sozeau, Matthieu
and Tabareau, Nicolas",
editor="Avigad, Jeremy
and Mahboubi, Assia",
title="Towards Certified Meta-Programming with Typed Template-Coq",
booktitle="Interactive Theorem Proving",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="20--39",
isbn="978-3-319-94821-8"
}

@article{lean-refl,
author = {Ebner, Gabriel and Ullrich, Sebastian and Roesch, Jared and Avigad, Jeremy and de Moura, Leonardo},
title = {A Metaprogramming Framework for Formal Verification},
year = {2017},
issue_date = {September 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {1},
number = {ICFP},
url = {https://doi.org/10.1145/3110278},
doi = {10.1145/3110278},
journal = {Proc. ACM Program. Lang.},
month = aug,
articleno = {34},
numpages = {29},
keywords = {theorem proving, tactic language, metaprogramming, dependent type theory}
}


@phdthesis{nuprl-refl,
author = {Barzilay, Eli},
advisor = {Constable, Robert},
title = {Implementing Reflection in Nuprl},
year = {2005},
isbn = {0542395479},
publisher = {Cornell University},
address = {USA},
note = {AAI3195788}
}

@InProceedings{agda-refl,
author="van der Walt, Paul
and Swierstra, Wouter",
editor="Hinze, Ralf",
title="Engineering Proof by Reflection in Agda",
booktitle="Implementation and Application of Functional Languages",
year="2013",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="157--173",
isbn="978-3-642-41582-1"
}

@inproceedings{cnninapl,
author = {\v{S}inkarovs, Artjoms and Bernecky, Robert and Scholz, Sven-Bodo},
title = {Convolutional Neural Networks in APL},
year = {2019},
isbn = {9781450367172},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3315454.3329960},
doi = {10.1145/3315454.3329960},
booktitle = {Proceedings of the 6th ACM SIGPLAN International Workshop on Libraries, Languages and Compilers for Array Programming},
pages = {69–79},
numpages = {11},
keywords = {arrays, CNN, APL, DSL, neural networks},
location = {Phoenix, AZ, USA},
series = {ARRAY 2019}
}

@article{sac,
author = {Scholz, Sven-Bodo},
title = {Single Assignment C: Efficient Support for High-Level Array Operations in a Functional Setting},
year = {2003},
issue_date = {November 2003},
publisher = {Cambridge University Press},
address = {USA},
volume = {13},
number = {6},
issn = {0956-7968},
url = {https://doi.org/10.1017/S0956796802004458},
doi = {10.1017/S0956796802004458},
journal = {J. Funct. Program.},
month = nov,
pages = {1005–1059},
numpages = {55}
}

@incollection{Martin-Lof-1972,
  Author = {Martin-L{\"o}f, Per},
  Booktitle = {Twenty-five years of constructive type theory ({V}enice, 1995)},
  Mrclass = {03B15 (03F55)},
  Mrnumber = 1686864,
  Pages = {127--172},
  Publisher = {Oxford University Press},
  Editor = {Giovanni Sambin and Jan M. Smith},
  Series = {Oxford Logic Guides},
  Title = {An intuitionistic theory of types},
  Volume = 36,
  Year = 1998
}

@InProceedings{refl-masses,
author="Herzeel, Charlotte
and Costanza, Pascal
and D'Hondt, Theo",
editor="Hirschfeld, Robert
and Rose, Kim",
title="Reflection for the Masses",
booktitle="Self-Sustaining Systems",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="87--122",
isbn="978-3-540-89275-5"
}

@inproceedings{refl-lisp,
    author = {Smith, Brian Cantwell},
    title = {Reflection and Semantics in LISP},
    year = {1984},
    isbn = {0897911253},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/800017.800513},
    doi = {10.1145/800017.800513},
    booktitle = {Proceedings of the 11th ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages},
    pages = {23–35},
    numpages = {13},
    location = {Salt Lake City, Utah, USA},
    series = {POPL '84}
}

@InProceedings{metaocaml,
author="Kiselyov, Oleg",
editor="Codish, Michael
and Sumii, Eijiro",
title="The Design and Implementation of BER�MetaOCaml",
booktitle="Functional and Logic Programming",
year="2014",
publisher="Springer International Publishing",
address="Cham",
pages="86--102",
isbn="978-3-319-07151-0"
}


@inproceedings{reification,
author = {Friedman, Daniel P. and Wand, Mitchell},
title = {Reification: Reflection without Metaphysics},
year = {1984},
isbn = {0897911423},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800055.802051},
doi = {10.1145/800055.802051},
booktitle = {Proceedings of the 1984 ACM Symposium on LISP and Functional Programming},
pages = {348–355},
numpages = {8},
location = {Austin, Texas, USA},
series = {LFP '84}
}

@article{futurama,
author = {Futamura, Yoshihiko},
title = {Partial Evaluation of Computation Process—AnApproach to a Compiler-Compiler},
year = {1999},
issue_date = {December 1999},
publisher = {Kluwer Academic Publishers},
address = {USA},
volume = {12},
number = {4},
issn = {1388-3690},
url = {https://doi.org/10.1023/A:1010095604496},
doi = {10.1023/A:1010095604496},
journal = {Higher Order Symbol. Comput.},
month = dec,
pages = {381–391},
numpages = {11},
keywords = {Futamura projections, compiler, interpreter, program transformation, partial evaluation}
}

@article{lms,
author = {Rompf, Tiark and Odersky, Martin},
title = {Lightweight Modular Staging: A Pragmatic Approach to Runtime Code Generation and Compiled DSLs},
year = {2010},
issue_date = {Febuary 2011},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {46},
number = {2},
issn = {0362-1340},
url = {https://doi.org/10.1145/1942788.1868314},
doi = {10.1145/1942788.1868314},
journal = {SIGPLAN Not.},
month = oct,
pages = {127–136},
numpages = {10},
keywords = {code generation, domain-specific languages, language virtualization, multi-stage programming}
}        



@article{DBLP:journals/jfp/GrundyMO06,
  author    = {Jim Grundy and
               Thomas F. Melham and
               John W. O'Leary},
  title     = {A reflective functional language for hardware design and theorem proving},
  journal   = {J. Funct. Program.},
  volume    = {16},
  number    = {2},
  pages     = {157--196},
  year      = {2006},
  url       = {https://doi.org/10.1017/S0956796805005757},
  doi       = {10.1017/S0956796805005757},
  timestamp = {Sat, 27 May 2017 14:24:34 +0200},
  biburl    = {https://dblp.org/rec/journals/jfp/GrundyMO06.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{metaml,
author = {Taha, Walid and Sheard, Tim},
title = {Multi-Stage Programming with Explicit Annotations},
year = {1997},
issue_date = {Dec. 1997},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {32},
number = {12},
issn = {0362-1340},
url = {https://doi.org/10.1145/258994.259019},
doi = {10.1145/258994.259019},
journal = {SIGPLAN Not.},
month = dec,
pages = {203–217},
numpages = {15}
}


@inproceedings{10.5555/647849.737066,
author = {Altenkirch, Thorsten and Reus, Bernhard},
title = {Monadic Presentations of Lambda Terms Using Generalized Inductive Types},
year = {1999},
isbn = {3540665366},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
booktitle = {Proceedings of the 13th International Workshop and 8th Annual Conference of the EACSL on Computer Science Logic},
pages = {453–468},
numpages = {16},
series = {CSL '99}
}

@article{CHAPMAN200921,
title = {Type Theory Should Eat Itself},
journal = {Electronic Notes in Theoretical Computer Science},
volume = {228},
pages = {21-36},
year = {2009},
note = {Proceedings of the International Workshop on Logical Frameworks and Metalanguages: Theory and Practice (LFMTP 2008)},
issn = {1571-0661},
doi = {https://doi.org/10.1016/j.entcs.2008.12.114},
url = {https://www.sciencedirect.com/science/article/pii/S157106610800577X},
author = {James Chapman},
keywords = {big-step normalisation, typed syntax, type theory, Agda, explicit substitutions},
}


@InProceedings{10.1007/978-3-540-74464-1_7,
author="Danielsson, Nils Anders",
editor="Altenkirch, Thorsten
and McBride, Conor",
title="A Formalisation of a Dependently Typed Language as an Inductive-Recursive Family",
booktitle="Types for Proofs and Programs",
year="2007",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="93--109",
isbn="978-3-540-74464-1"
}

@article{10.1145/3236785,
author = {Allais, Guillaume and Atkey, Robert and Chapman, James and McBride, Conor and McKinna, James},
title = {A Type and Scope Safe Universe of Syntaxes with Binding: Their Semantics and Proofs},
year = {2018},
issue_date = {September 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2},
number = {ICFP},
url = {https://doi.org/10.1145/3236785},
doi = {10.1145/3236785},
journal = {Proc. ACM Program. Lang.},
month = jul,
articleno = {90},
numpages = {30},
keywords = {Syntax with Binding, Simulation, Semantics, Agda, Logical Relations, Generic Programming, Fusion}
}


@inproceedings{10.1145/1863495.1863497,
author = {McBride, Conor},
title = {Outrageous but Meaningful Coincidences: Dependent Type-Safe Syntax and Evaluation},
year = {2010},
isbn = {9781450302517},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1863495.1863497},
doi = {10.1145/1863495.1863497},
booktitle = {Proceedings of the 6th ACM SIGPLAN Workshop on Generic Programming},
pages = {1–12},
numpages = {12},
keywords = {dependent types, generic programming},
location = {Baltimore, Maryland, USA},
series = {WGP '10}
}

@InProceedings{10.1007/978-3-540-69407-6_39,
author="Letouzey, Pierre",
editor="Beckmann, Arnold
and Dimitracopoulos, Costas
and L{\"o}we, Benedikt",
title="Extraction in Coq: An Overview",
booktitle="Logic and Theory of Algorithms",
year="2008",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="359--369",
isbn="978-3-540-69407-6"
}

@InProceedings{10.1007/3-540-39185-1_12,
author="Letouzey, Pierre",
editor="Geuvers, Herman
and Wiedijk, Freek",
title="A New Extraction for Coq",
booktitle="Types for Proofs and Programs",
year="2003",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="200--219",
isbn="978-3-540-39185-2"
}

@InProceedings{sheard2002template,
author = {Sheard, Tim and Peyton Jones, Simon},
title = {Template meta-programming for Haskell},
booktitle = {Proceedings of the 2002 Haskell Workshop, Pittsburgh},
year = {2002},
month = {October},
pages = {1-16},
edition = {Proceedings of the 2002 Haskell Workshop, Pittsburgh},
}        

@techreport{plt-tr1,
  title       = {Reference: Racket},
  author      = {Matthew Flatt and PLT},
  number      = {PLT-TR-2010-1},
  institution = {PLT Design Inc.},
  year        = {2010},
  note        = {\url{https://racket-lang.org/tr1/}}
}

@inproceedings{10.1145/2847538.2847541,
author = {Najd, Shayan and Lindley, Sam and Svenningsson, Josef and Wadler, Philip},
title = {Everything Old is New Again: Quoted Domain-Specific Languages},
year = {2016},
isbn = {9781450340977},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2847538.2847541},
doi = {10.1145/2847538.2847541},
booktitle = {Proceedings of the 2016 ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation},
pages = {25–36},
numpages = {12},
keywords = {embedded language, EDSL, quotation, domain-specific language, normalisation, subformula principle, DSL, QDSL},
location = {St. Petersburg, FL, USA},
series = {PEPM '16}
}       

@article{10.1145/3371071,
author = {Chang, Stephen and Ballantyne, Michael and Turner, Milo and Bowman, William J.},
title = {Dependent Type Systems as Macros},
year = {2019},
issue_date = {January 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {POPL},
url = {https://doi.org/10.1145/3371071},
doi = {10.1145/3371071},
journal = {Proc. ACM Program. Lang.},
month = dec,
articleno = {3},
numpages = {29},
keywords = {proof assistants, macros, dependent types, type systems}
}        

@article{10.1145/3371076,
author = {Sozeau, Matthieu and Boulier, Simon and Forster, Yannick and Tabareau, Nicolas and Winterhalter, Th\'{e}o},
title = {Coq Coq Correct! Verification of Type Checking and Erasure for Coq, in Coq},
year = {2019},
issue_date = {January 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {POPL},
url = {https://doi.org/10.1145/3371076},
doi = {10.1145/3371076},
journal = {Proc. ACM Program. Lang.},
month = dec,
articleno = {8},
numpages = {28},
keywords = {certification, type checker, proof assistants}
}        

@inproceedings{10.1145/3372885.3373829,
author = {Annenkov, Danil and Nielsen, Jakob Botsch and Spitters, Bas},
title = {ConCert: A Smart Contract Certification Framework in Coq},
year = {2020},
isbn = {9781450370974},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372885.3373829},
doi = {10.1145/3372885.3373829},
booktitle = {Proceedings of the 9th ACM SIGPLAN International Conference on Certified Programs and Proofs},
pages = {215–228},
numpages = {14},
keywords = {certified programming, functional programming languages, blockchain, Coq, software correctness, smart contracts},
location = {New Orleans, LA, USA},
series = {CPP 2020}
}     

@article{TROJAHNER2009643,
title = {Dependently typed array programs donât go wrong},
journal = {The Journal of Logic and Algebraic Programming},
volume = {78},
number = {7},
pages = {643-664},
year = {2009},
note = {The 19th Nordic Workshop on Programming Theory (NWPT 2007)},
issn = {1567-8326},
doi = {https://doi.org/10.1016/j.jlap.2009.03.002},
url = {https://www.sciencedirect.com/science/article/pii/S1567832609000411},
author = {Kai Trojahner and Clemens Grelck},
keywords = {Array programming, Dependent types, Program verification},
}

@InProceedings{10.1007/978-3-642-54833-8_3,
author="Slepak, Justin
and Shivers, Olin
and Manolios, Panagiotis",
editor="Shao, Zhong",
title="An Array-Oriented Language with Static Rank Polymorphism",
booktitle="Programming Languages and Systems",
year="2014",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="27--46",
isbn="978-3-642-54833-8"
}

@InProceedings{10.1007/978-3-642-41582-1_11,
author="Thiemann, Peter
and Chakravarty, Manuel M. T.",
editor="Hinze, Ralf",
title="Agda Meets Accelerate",
booktitle="Implementation and Application of Functional Languages",
year="2013",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="174--189",
isbn="978-3-642-41582-1"
}

@book{10.5555/1965123,
    author = {Bertot, Yves and Castran, Pierre},
    title = {Interactive Theorem Proving and Program Development: Coq'Art The Calculus of Inductive Constructions},
    year = {2010},
    isbn = {3642058809},
    publisher = {Springer Publishing Company, Incorporated},
    edition = {1st},
}

      

@inproceedings{10.5555/1813347.1813352,
    author = {Norell, Ulf},
    title = {Dependently Typed Programming in Agda},
    year = {2008},
    isbn = {3642046517},
    publisher = {Springer-Verlag},
    address = {Berlin, Heidelberg},
    booktitle = {Proceedings of the 6th International Conference on Advanced Functional Programming},
    pages = {230–266},
    numpages = {37},
    location = {Heijen, The Netherlands},
    series = {AFP'08}
    }

      

@inproceedings{conf/cade/MouraKADR15,
  added-at = {2017-05-21T00:00:00.000+0200},
  author = {de Moura, Leonardo Mendonça and Kong, Soonho and Avigad, Jeremy and van Doorn, Floris and von Raumer, Jakob},
  biburl = {https://www.bibsonomy.org/bibtex/2d040cca1a430f5fdff2fc3da7ef43c4e/dblp},
  booktitle = {CADE},
  crossref = {conf/cade/2015},
  editor = {Felty, Amy P. and Middeldorp, Aart},
  ee = {https://doi.org/10.1007/978-3-319-21401-6_26},
  interhash = {c7d34dd8a3cfc0e30272dbe35c8faa66},
  intrahash = {d040cca1a430f5fdff2fc3da7ef43c4e},
  isbn = {978-3-319-21400-9},
  keywords = {dblp},
  pages = {378-388},
  publisher = {Springer},
  series = {Lecture Notes in Computer Science},
  timestamp = {2019-05-15T18:56:21.000+0200},
  title = {The Lean Theorem Prover (System Description).},
  url = {http://dblp.uni-trier.de/db/conf/cade/cade2015.html#MouraKADR15},
  volume = 9195,
  year = 2015
}        


@article{JFP:9060502,
  author = {BRADY,EDWIN},
  title = {Idris, a general-purpose dependently typed programming language: Design and implementation},
  journal = {Journal of Functional Programming},
  volume = {23},
  issue = {05},
  month = {9},
  year = {2013},
  issn = {1469-7653},
  pages = {552--593},
  numpages = {42},
  doi = {10.1017/S095679681300018X},
  URL = {https://journals.cambridge.org/article_S095679681300018X},
}        

@inproceedings{pushpull,
 author = {Svensson, Bo Joel and Svenningsson, Josef},
 title = {Defunctionalizing Push Arrays},
 booktitle = {Proceedings of the 3rd ACM SIGPLAN Workshop on Functional High-performance Computing},
 series = {FHPC '14},
 year = {2014},
 isbn = {978-1-4503-3040-4},
 location = {Gothenburg, Sweden},
 pages = {43--52},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2636228.2636231},
 doi = {10.1145/2636228.2636231},
 acmid = {2636231},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {arrays, defunctionalization, embedded languages},
}        

@book{APL,
 author = {Iverson, Kenneth E.},
 title = {A Programming Language},
 year = {1962},
 isbn = {0-471430-14-5},
 source = {Library of Congress Catalog Card Number: 62-15180},
 publisher = {John Wiley \& Sons, Inc.},
 address = {New York, NY, USA},
}        
